{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","className","type","id","aria-describedby","placeholder","value","onChange","e","target","onClick","preventDefault","text","completed","Math","random","aria-label","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52b79f4f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value)\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos,\r\n            { text: inputText, completed: false, id: Math.random() * 100 },\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <form className=\"c-form\">\r\n            <input type=\"text\" className=\"form-control c-todo-input\" id=\"InputName\" aria-describedby=\"emailHelp\" placeholder=\"Todo Name\" value={inputText} onChange={inputTextHandler}/>\r\n            <button onClick={submitTodoHandler} className=\"c-todo-button btn btn-dark\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <select className=\"form-select filter-todo\" aria-label=\"Default select example\" onChange={statusHandler} name=\"todos\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Complated</option>\r\n                <option value=\"uncompleted\">Uncomplated</option>\r\n            </select>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id))\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if(item.id === todo.id){\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"c-todo\">\r\n            <li className={`c-todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n                {text}\r\n            </li>\r\n            <div className=\"c-button-group\">\r\n                <button onClick={completeHandler} className={`complete-btn ${todo.completed ? \"c-green\" : \"\"}`}><i className=\"fas fa-check\"></i></button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"c-todo-container\">\r\n      <ul className=\"c-todo-list list-group\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from 'react';\nimport Form from \"./components/Form\"\nimport TodoList from \"./components/TodoList\"\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  // Save to Local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  // Get to Local\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"))\n      setTodos(todoLocal);\n    }\n  }\n\n  return (\n    <div className=\"c-app\">\n      <header>\n        <h1>Todo App</h1>\n      </header>\n      <Form \n        inputText={inputText} \n        todos={todos} \n        setTodos={setTodos} \n        setInputText={setInputText} \n        setStatus={setStatus} \n      />\n      <TodoList \n        filteredTodos={filteredTodos} \n        setTodos={setTodos} \n        todos={todos} \n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}